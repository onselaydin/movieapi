sondaki nokta bulunduğu klasöre kopyala demek....
PS C:\movieapi> git clone https://github.com/onselaydin/movieapi.git .

Hangi dosyalar yeni yada değişiklik yapıldı gösterir
PS C:\movieapi> git status

bütün dosyaları versiyon kontrolüne eklemek
PS C:\movieapi> git add .

git epostamızı  tanıtma
PS C:\movieapi> git config --global user.email "onselaydin@gmail.com"

dosyalarımızı gite eklemek
PS C:\movieapi> git commit -m "not text dosyası ekledik."

gite gönderme
PS C:\movieapi> git push origin master

gitten projenin son halini almak
git pull origin master

https://mlab.com/home
mongodb://movie_user:abcd1234@ds213645.mlab.com:13645/movieapi

--bcrypt
www.npmjs.com/package/bcrypt

--json web token
www.jwt.io
npm install jsonwebtoken

--test için mocha
npm install --global mocha
chaijs.com
npm install mocha chai chai-http --save-dev

https://www.npmjs.com/package/node-xlsx
npm install node-xlsx --save

---HEROKU---
uygulama scale etmek için(sunucu yönetimi)
www.heroku.com
document linkinden windows cli indir kur
cli a girip $ heroku login ile giriş yap

heroku create
git remote

package da aşağıdaki değişiği yaptık. Artık localimde
uygulamayı çalıştırırken npm start:dev demem gerekiyor.
ilk satır ise heroku için.

"start": "node ./bin/www",
"start:dev": "nodemon ./bin/www",

herokuya deploy yapmadan önce git e push yap
PS C:\movieapi> git push heroku master
siteyi açmak için aşağıdaki komut yada orda yazan link
c:\movieapi>heroku open 

==Travis CI==
CI ( contunious integration)
uygulama yazılıp buil ve test sonuçlarının developera kadar iletilmesi
CD (contunious delivery) 
uygulama yazıldı build edildi test sonuçları yazılımcıya gitti testler
başarılı ise deploy edildi 
https://travis-ci.org
github ile üye ol. Repolar geliyor.
projende .travis.yml dosyası oluştur.
dosya içeriği ile ilgili bir çok ayar var travis dökümanlarından temin edilebilir.

https://oncellmovie.herokuapp.com/

https://api.travis-ci.org/onselaydin/movieapi.svg

--digitalocean.com--
ssh roo@ip
sudo 
wwww altında git clone repo linki ile nodejs uygulamamızı aldık
nodejs uygulamasını sürekli açık tutmak için
--PM2--
https://www.npmjs.com/package/pm2
npm install -g pm2   -- global olarak pm2 yu kurduk.
pm2 start bin/www  --- uygulamayı çalıştırır.
pm2 stop www --uygulamayı durdurur.
pm2 restart www --uygulamayı yeniden başlatır.
pm2 monit --- uygulamayı izlemek için
pm2 logs --- tutulan logları gösteriyor.

---nginx reverse proxy---
linuxda kurulum
# sudo apt-get install nginx
ayarlar için örneğin 3000 portunu 80 e yönlendirmek için
# sudo vi /etc/nginx/sites-available/default
vi editorunde de bişey yazmak için (i) harfini kullan
dd yaparsak satır siler, inserted çıkmak için esc
kaydetmek için : wq
location satırına geliyoruz.

--load balace --vagrant---
mehmetseven.net/nginx-ve-nodejs-ile-load-balancing
www.ctl.io/inages/load-balancing.png

